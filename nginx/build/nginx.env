#Lista de paquetes
PACKS="python gcc make build-essential autoconf automake libtool libcurl4-openssl-dev liblua5.3-dev libfuzzy-dev ssdeep gettext pkg-config libpcre3-dev libxml2 libxml2-dev libcurl4 libgeoip-dev libyajl-dev doxygen nginx dpkg-dev uuid-dev"

#Variables
OWASPRV=3.2.0

#Compila modsecurity pero no crea el módulo, crea dos directorios para simular websites /ser8080 /ser8081 donde se ejecutará python SimpleHTTPServer
COMMANDS="echo \"deb-src http://deb.debian.org/debian bullseye main\" >> /etc/apt/sources.list,apt update,apt build-dep -y nginx,cd /usr/local/src && mkdir nginx && cd nginx && apt source nginx,git clone --depth 1 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity /usr/local/src/ModSecurity,cd /usr/local/src/ModSecurity && git submodule init && git submodule update && ./build.sh && ./configure && make -j4 && make install,git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git /usr/local/src/ModSecurity-nginx,cd /tmp && wget https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v${OWASPRV}.tar.gz && tar -zxvf v${OWASPRV}.tar.gz && mv owasp-modsecurity-crs-${OWASPRV} owasp-modsecurity-crs && mv owasp-modsecurity-crs/crs-setup.conf.example owasp-modsecurity-crs/crs-setup.conf && mv owasp-modsecurity-crs/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example owasp-modsecurity-crs/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf && mv owasp-modsecurity-crs /usr/local/,mkdir /ser8080 /ser8081,echo \"<html><body><h1>Entrando por 8080</h1></body></html>\" > /ser8080/index.html,echo \"<html><body><h1>Entrando por 8081</h1></body></html>\" > /ser8081/index.html,rm -rf /usr/local/src/ModSecurity/src"

